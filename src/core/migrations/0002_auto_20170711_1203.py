# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2017-07-11 12:03
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
        ("submission", "0001_initial"),
        ("journal", "0002_auto_20170711_1203"),
        ("auth", "0007_alter_validators_add_error_messages"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.AddField(
            model_name="workflowelement",
            name="journal",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="journal.Journal"
            ),
        ),
        migrations.AddField(
            model_name="workflow",
            name="elements",
            field=models.ManyToManyField(to="core.WorkflowElement"),
        ),
        migrations.AddField(
            model_name="workflow",
            name="journal",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="journal.Journal"
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="assignees",
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="task",
            name="complete_events",
            field=models.ManyToManyField(to="core.TaskCompleteEvents"),
        ),
        migrations.AddField(
            model_name="task",
            name="completed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="completed_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="content_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="task_content_type",
                to="contenttypes.ContentType",
            ),
        ),
        migrations.AddField(
            model_name="settingvaluetranslation",
            name="master",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="translations",
                to="core.SettingValue",
            ),
        ),
        migrations.AddField(
            model_name="settingvalue",
            name="journal",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="journal.Journal"
            ),
        ),
        migrations.AddField(
            model_name="settingvalue",
            name="setting",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.Setting"
            ),
        ),
        migrations.AddField(
            model_name="setting",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.SettingGroup"
            ),
        ),
        migrations.AddField(
            model_name="passwordresettoken",
            name="account",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="newsitem",
            name="content_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="news_content_type",
                to="contenttypes.ContentType",
            ),
        ),
        migrations.AddField(
            model_name="newsitem",
            name="large_image_file",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="news_file",
                to="core.File",
            ),
        ),
        migrations.AddField(
            model_name="newsitem",
            name="posted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="homepageelement",
            name="content_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="element_content_type",
                to="contenttypes.ContentType",
            ),
        ),
        migrations.AddField(
            model_name="galley",
            name="article",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="submission.Article"
            ),
        ),
        migrations.AddField(
            model_name="galley",
            name="css_file",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="css_file",
                to="core.File",
            ),
        ),
        migrations.AddField(
            model_name="galley",
            name="file",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.File"
            ),
        ),
        migrations.AddField(
            model_name="galley",
            name="images",
            field=models.ManyToManyField(
                blank=True, null=True, related_name="images", to="core.File"
            ),
        ),
        migrations.AddField(
            model_name="filehistory",
            name="owner",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="file",
            name="history",
            field=models.ManyToManyField(to="core.FileHistory"),
        ),
        migrations.AddField(
            model_name="file",
            name="owner",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="editorialgroupmember",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.EditorialGroup"
            ),
        ),
        migrations.AddField(
            model_name="editorialgroupmember",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="editorialgroup",
            name="journal",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="journal.Journal"
            ),
        ),
        migrations.AddField(
            model_name="contacts",
            name="content_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="contact_content_type",
                to="contenttypes.ContentType",
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="content_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="contact_c_t",
                to="contenttypes.ContentType",
            ),
        ),
        migrations.AddField(
            model_name="accountrole",
            name="journal",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="journal.Journal"
            ),
        ),
        migrations.AddField(
            model_name="accountrole",
            name="role",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.Role"
            ),
        ),
        migrations.AddField(
            model_name="accountrole",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="country",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.Country",
                verbose_name="Country",
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.Group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="interest",
            field=models.ManyToManyField(blank=True, null=True, to="core.Interest"),
        ),
        migrations.AddField(
            model_name="account",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.Permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="settingvaluetranslation",
            unique_together=set([("language_code", "master")]),
        ),
        migrations.AlterUniqueTogether(
            name="homepageelement",
            unique_together=set([("name", "content_type", "object_id")]),
        ),
    ]
