# Generated by Django 4.2.11 on 2024-04-30 17:04

from django.db import migrations, models
from utils.migration_utils import update_setting_types


SETTINGS_WITH_OLD_AND_NEW_TYPES = [
    ("general", "collection_name", "text", "char"),
    ("general", "collection_name_plural", "text", "char"),
    ("general", "matromo_tracking_code", "text", "char"),
    ("general", "copyright_submission_label", "char", "mini-html"),
    ("crossref", "crossref_date_suffix", "text", "char"),
    ("general", "default_journal_language", "text", "char"),
]


EMAIL_SUBJECT_GROUP_WITH_OLD_AND_NEW_TYPE = [
    ("email_subject", "text", "char"),
    ("email_subject", "rich-text", "char"),
]


def standardize_setting_types(apps, schema_editor):
    """Standardizes use of text, char, and mini-html setting types"""

    Setting = apps.get_model("core", "Setting")
    for group, name, old_type, new_type in SETTINGS_WITH_OLD_AND_NEW_TYPES:
        update_setting_types(
            Setting,
            group,
            old_type,
            new_type,
            setting_name=name,
        )

    Setting = apps.get_model("core", "Setting")
    for group, old_type, new_type in EMAIL_SUBJECT_GROUP_WITH_OLD_AND_NEW_TYPE:
        update_setting_types(Setting, group, old_type, new_type)


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0088_fix_untyped_galleys"),
    ]

    operations = [
        migrations.AlterField(
            model_name="setting",
            name="types",
            field=models.CharField(
                choices=[
                    ("rich-text", "Rich Text"),
                    ("mini-html", "Mini HTML"),
                    ("text", "Plain Text"),
                    ("char", "Characters"),
                    ("number", "Number"),
                    ("boolean", "Boolean"),
                    ("file", "File"),
                    ("select", "Select"),
                    ("json", "JSON"),
                ],
                max_length=20,
            ),
        ),
        migrations.RunPython(
            standardize_setting_types, reverse_code=migrations.RunPython.noop
        ),
    ]
