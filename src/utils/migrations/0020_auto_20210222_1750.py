# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-02-22 16:35
from __future__ import unicode_literals

from django.db import migrations
from django.conf import settings
from django.utils import translation as _translation


def migrate_plugin_settings(apps, schema_editor):
    PluginSettingValue = apps.get_model("utils", "PluginSettingValue")
    PluginSettingValueTranslation = apps.get_model(
        "utils", "PluginSettingValueTranslation"
    )
    SettingGroup = apps.get_model("core", "SettingGroup")
    Setting = apps.get_model("core", "Setting")
    SettingValue = apps.get_model("core", "SettingValue")

    translations = PluginSettingValueTranslation.objects.all()

    for translation in translations:
        plugin_setting_value = PluginSettingValue.objects.get(
            pk=translation.master_id,
        )
        plugin_setting = plugin_setting_value.setting

        plugin_group_name = "plugin:{plugin_name}".format(
            plugin_name=plugin_setting.plugin.name,
        )
        setting_group, c = SettingGroup.objects.get_or_create(
            name=plugin_group_name,
            defaults={
                "enabled": True,
            },
        )
        setting, c = Setting.objects.get_or_create(
            name=plugin_setting.name,
            group=setting_group,
            types=plugin_setting.types,
            description=plugin_setting.description,
            is_translatable=plugin_setting.is_translatable,
        )
        with _translation.override(settings.LANGUAGE_CODE):
            setting_value, c = SettingValue.objects.get_or_create(
                journal=plugin_setting_value.journal
                if plugin_setting_value.journal
                else None,
                setting=setting,
                value=translation.value,
            )
            if c:
                print(
                    "PluginSetting {} moved to Setting {}".format(
                        plugin_setting.name,
                        setting.name,
                    )
                )


class Migration(migrations.Migration):
    dependencies = [
        ("utils", "0019_upgrade_1_3_9"),
    ]

    operations = [
        migrations.RunPython(
            migrate_plugin_settings, reverse_code=migrations.RunPython.noop
        ),
    ]
