# Generated by Django 4.2.11 on 2024-07-06 14:17

import core.model_utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0095_auto_20240605_1024"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("submission", "0079_merge_20240602_1739"),
        ("journal", "0065_prepub_send_notifications"),
    ]

    operations = [
        migrations.AddField(
            model_name="issue",
            name="allowed_sections",
            field=models.ManyToManyField(blank=True, to="submission.section"),
        ),
        migrations.AddField(
            model_name="issue",
            name="date_close",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Date of submission closing"
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="date_open",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Date of submission opening"
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="description",
            field=core.model_utils.JanewayBleachField(
                blank=True,
                default="",
                help_text="Rich text description of the issue for the issue page.",
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="description_cy",
            field=core.model_utils.JanewayBleachField(
                blank=True,
                default="",
                help_text="Rich text description of the issue for the issue page.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="description_de",
            field=core.model_utils.JanewayBleachField(
                blank=True,
                default="",
                help_text="Rich text description of the issue for the issue page.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="description_en",
            field=core.model_utils.JanewayBleachField(
                blank=True,
                default="",
                help_text="Rich text description of the issue for the issue page.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="description_en_us",
            field=core.model_utils.JanewayBleachField(
                blank=True,
                default="",
                help_text="Rich text description of the issue for the issue page.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="description_fr",
            field=core.model_utils.JanewayBleachField(
                blank=True,
                default="",
                help_text="Rich text description of the issue for the issue page.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="description_nl",
            field=core.model_utils.JanewayBleachField(
                blank=True,
                default="",
                help_text="Rich text description of the issue for the issue page.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="documents",
            field=models.ManyToManyField(
                blank=True, related_name="issue_documents", to="core.file"
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="expected_submissions",
            field=models.IntegerField(
                blank=True, help_text="Expected number of submissions", null=True
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="internal_notes",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="issue",
            name="invitees",
            field=models.ManyToManyField(
                blank=True, related_name="invited_issues", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="managing_editors",
            field=models.ManyToManyField(
                blank=True, related_name="managed_issue", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="short_name",
            field=models.CharField(
                blank=True, default="", help_text="Internal issue name", max_length=300
            ),
        ),
    ]
